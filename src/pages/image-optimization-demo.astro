---
import Layout from '../layouts/Layout.astro'
import OptimizedImage from '../components/OptimizedImage.astro'
import { getAllProjects } from '../sanity/queries'

const projects = await getAllProjects()
const featuredProjects = projects.filter(p => p.image).slice(0, 6)
---

<Layout 
  title="Image Optimization Demo"
  description="Demonstration of advanced image optimization with multiple formats, responsive sizing, and progressive loading."
>
  <div class="py-16">
    <header class="mb-16 text-center">
      <h1 class="text-4xl font-serif mb-4">Advanced Image Optimization</h1>
      <p class="text-xl text-stone-500 mb-8 max-w-2xl mx-auto">
        Experience blazing-fast image loading with multiple formats (AVIF, WebP, JPG), 
        responsive sizing, and intelligent progressive enhancement.
      </p>
      
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-green-50 text-green-700 rounded-lg">
          <span>âš¡</span>
          <span class="text-sm">Next-gen formats</span>
        </div>
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-blue-50 text-blue-700 rounded-lg">
          <span>ðŸ“±</span>
          <span class="text-sm">Responsive breakpoints</span>
        </div>
        <div class="inline-flex items-center gap-2 px-4 py-2 bg-purple-50 text-purple-700 rounded-lg">
          <span>ðŸ”„</span>
          <span class="text-sm">Progressive loading</span>
        </div>
      </div>
    </header>

    <main>
      <!-- Hero Image Demo -->
      <section class="mb-16">
        <h2 class="text-2xl font-serif mb-6">Hero Image Optimization</h2>
        <div class="bg-stone-50 rounded-xl p-8">
          <p class="text-stone-600 mb-6">
            Critical hero images load immediately with highest priority, multiple formats, and optimized breakpoints.
          </p>
          {featuredProjects[0]?.image && (
            <OptimizedImage 
              source={featuredProjects[0].image}
              alt={featuredProjects[0].title}
              preset="hero"
              priority={true}
              isAboveFold={true}
              isCritical={true}
              class="w-full rounded-lg shadow-lg"
            />
          )}
        </div>
      </section>

      <!-- Card Grid Demo -->
      <section class="mb-16">
        <h2 class="text-2xl font-serif mb-6">Responsive Card Gallery</h2>
        <p class="text-stone-600 mb-6">
          Card images use lazy loading with intersection observer for optimal performance.
        </p>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {featuredProjects.slice(1).map((project) => (
            <div class="bg-white rounded-lg overflow-hidden shadow-md">
              {project.image && (
                <OptimizedImage 
                  source={project.image}
                  alt={project.title}
                  preset="card"
                  class="w-full aspect-square"
                />
              )}
              <div class="p-4">
                <h3 class="font-semibold mb-2">{project.title}</h3>
                <p class="text-sm text-stone-600">{project.category} â€¢ {project.year}</p>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Technical Details -->
      <section class="mb-16 bg-stone-50 rounded-xl p-8">
        <h2 class="text-2xl font-serif mb-6">Optimization Features</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <h3 class="text-lg font-semibold mb-4">Format Support</h3>
            <ul class="space-y-2 text-sm text-stone-600">
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-green-500 rounded-full"></span>
                <span><strong>AVIF:</strong> Next-gen format with 50% smaller file sizes</span>
              </li>
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-blue-500 rounded-full"></span>
                <span><strong>WebP:</strong> Modern format with excellent compression</span>
              </li>
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-orange-500 rounded-full"></span>
                <span><strong>JPG:</strong> Universal fallback with optimized quality</span>
              </li>
            </ul>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold mb-4">Loading Strategies</h3>
            <ul class="space-y-2 text-sm text-stone-600">
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-red-500 rounded-full"></span>
                <span><strong>Critical:</strong> Immediate loading with high priority</span>
              </li>
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-yellow-500 rounded-full"></span>
                <span><strong>Above-fold:</strong> Eager loading for visible content</span>
              </li>
              <li class="flex items-center gap-2">
                <span class="w-2 h-2 bg-purple-500 rounded-full"></span>
                <span><strong>Lazy:</strong> Progressive loading with intersection observer</span>
              </li>
            </ul>
          </div>
        </div>
      </section>

      <!-- Performance Metrics -->
      <section class="mb-16">
        <h2 class="text-2xl font-serif mb-6">Performance Benefits</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="p-6 bg-white rounded-lg border border-stone-200 text-center">
            <div class="text-3xl font-bold text-green-600 mb-2">-50%</div>
            <div class="text-sm text-stone-600">File size reduction with AVIF</div>
          </div>
          
          <div class="p-6 bg-white rounded-lg border border-stone-200 text-center">
            <div class="text-3xl font-bold text-blue-600 mb-2">-75%</div>
            <div class="text-sm text-stone-600">Bandwidth usage with lazy loading</div>
          </div>
          
          <div class="p-6 bg-white rounded-lg border border-stone-200 text-center">
            <div class="text-3xl font-bold text-purple-600 mb-2">+40%</div>
            <div class="text-sm text-stone-600">Perceived performance improvement</div>
          </div>
        </div>
      </section>

      <!-- Loading States Demo -->
      <section class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-8">
        <h2 class="text-2xl font-serif mb-4">Progressive Loading Demo</h2>
        <p class="text-stone-600 mb-6">
          Scroll down to see images load progressively as they enter the viewport.
        </p>
        
        <div class="space-y-8">
          {featuredProjects.map((project, index) => (
            <div class="flex gap-6 items-center" style={`margin-top: ${index * 200}px`}>
              <div class="flex-shrink-0">
                {project.image && (
                  <OptimizedImage 
                    source={project.image}
                    alt={project.title}
                    preset="thumbnail"
                    class="w-24 h-24 rounded-lg"
                  />
                )}
              </div>
              <div>
                <h3 class="font-semibold">{project.title}</h3>
                <p class="text-sm text-stone-600">{project.description}</p>
              </div>
            </div>
          ))}
        </div>
      </section>
    </main>
  </div>
</Layout>

<style>
  /* Smooth reveal animations */
  .grid > div {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
  }

  .grid > div:nth-child(1) { animation-delay: 0.1s; }
  .grid > div:nth-child(2) { animation-delay: 0.2s; }
  .grid > div:nth-child(3) { animation-delay: 0.3s; }
  .grid > div:nth-child(4) { animation-delay: 0.4s; }
  .grid > div:nth-child(5) { animation-delay: 0.5s; }
  .grid > div:nth-child(6) { animation-delay: 0.6s; }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>