---
import Layout from '../layouts/Layout.astro';
import { getAllPlaygroundItems, getAllProjects } from '../sanity/queries';
import type { Project, Playground } from '../sanity/types';
import SanityImage from '../components/SanityImage.astro';

// Get both projects (portfolio) and playground content
const projects = await getAllProjects();
const playgroundContent = await getAllPlaygroundItems();

// Group playground content by type
const playgroundByType = playgroundContent.reduce((acc, item) => {
  const type = item.type;
  if (!acc[type]) {
    acc[type] = [];
  }
  acc[type].push(item);
  return acc;
}, {} as Record<string, Playground[]>);
---

<Layout title="Playground">
  <div class="py-16">
    <header class="mb-12">
      <h1 class="text-4xl font-serif mb-4">Playground</h1>
      <p class="text-xl text-gray-600">Experiments, writing, explorations and inspiration</p>
    </header>

    <!-- Playground Content Sections -->
    {Object.entries(playgroundByType).map(([type, items]) => (
      <section class="mb-16">
        <h2 class="text-xl mb-8 capitalize">{type}</h2>
        
        {type === 'writing' ? (
          <!-- Writing Layout -->
          <div class="space-y-8">
            {items.map((item: Playground) => (
              <article class="bg-white border rounded-lg p-8 hover:shadow-lg transition-shadow">
                <h3 class="text-2xl mb-4">{item.title}</h3>
                {item.description && (
                  <p class="text-gray-600 mb-4 leading-relaxed">{item.description}</p>
                )}
                <div class="flex justify-between items-center text-sm text-gray-500 mb-4">
                  <span>{new Date(item.publishedAt).toLocaleDateString()}</span>
                  {item.featured && (
                    <span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded">Featured</span>
                  )}
                </div>
                <a 
                  href={`/playground/${item.slug.current}`} 
                  class="text-blue-600 hover:text-blue-800 font-medium"
                >
                  Read More â†’
                </a>
              </article>
            ))}
          </div>
        ) : (
          <!-- Grid Layout for Images/Experiments -->
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {items.map((item: Playground) => (
              <article class="bg-white border rounded-lg overflow-hidden hover:shadow-lg transition-shadow">
                {item.image && (
                  <div class="aspect-square bg-gray-200">
                    <SanityImage 
                      source={item.image}
                      alt={item.image.alt || item.title}
                      variant="thumbnail"
                      class="w-full h-full object-cover"
                    />
                  </div>
                )}
                
                <div class="p-4">
                  <h3 class="font-bold mb-2">{item.title}</h3>
                  {item.description && (
                    <p class="text-sm text-gray-600 mb-3">{item.description}</p>
                  )}
                  
                  <div class="flex justify-between items-center text-xs text-gray-500">
                    <span>{new Date(item.publishedAt).toLocaleDateString()}</span>
                    {item.featured && (
                      <span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded">Featured</span>
                    )}
                  </div>
                </div>
              </article>
            ))}
          </div>
        )}
      </section>
    ))}
    
    {playgroundContent.length === 0 && projects.length === 0 && (
      <div class="text-center py-16">
        <p class="text-gray-500 text-lg">No playground content available yet.</p>
        <p class="text-gray-400 mt-2">Add some content in your Sanity Studio to get started!</p>
      </div>
    )}
  </div>
</Layout>
