---
interface Props {
  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'info' | 'neutral'
  size?: 'small' | 'medium' | 'large'
  class?: string
}

const {
  variant = 'neutral',
  size = 'medium',
  class: className = ''
} = Astro.props

const variantClasses = {
  primary: 'bg-orange-500 text-white hover:bg-orange-600 hover:shadow-orange-500/30',
  secondary: 'bg-stone-950 text-white hover:bg-stone-800 hover:shadow-stone-950/30',
  success: 'bg-green-100 text-green-800 hover:bg-green-200 hover:text-green-900 hover:shadow-green-500/20',
  warning: 'bg-amber-100 text-amber-800 hover:bg-amber-200 hover:text-amber-900 hover:shadow-amber-500/20',
  info: 'bg-blue-100 text-blue-800 hover:bg-blue-200 hover:text-blue-900 hover:shadow-blue-500/20',
  neutral: 'bg-stone-100 text-stone-700 hover:bg-stone-200 hover:text-stone-800 hover:shadow-stone-500/20'
}

const sizeClasses = {
  small: 'text-xs px-3 py-1',        // Small: 4px vertical, 12px horizontal (3:1 ratio)
  medium: 'text-sm px-6 py-2',       // Medium: 8px vertical, 24px horizontal (3:1 ratio)  
  large: 'text-lg px-8 py-3'         // Large: 12px vertical, 32px horizontal (2.7:1 ratio)
}
---

<span 
  class={`
    inline-flex items-center font-medium rounded-full
    transition-all duration-200 ease-out
    hover:scale-105 hover:shadow-lg hover:-translate-y-0.5
    cursor-pointer
    ${variantClasses[variant]}
    ${sizeClasses[size]}
    ${className}
  `}
>
  <slot />
</span> 